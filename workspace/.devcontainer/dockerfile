FROM rust:latest

# configure users
ARG MNT_PATH
ARG PASS
ARG USER_ID
ARG USER_NAME
ARG GROUP_ID
ARG GROUP_NAME
ARG DOCKER_GROUP_ID

RUN addgroup -gid $DOCKER_GROUP_ID docker && \
    if [ $USER_NAME != 'root' ]; then \
        groupadd --gid ${GROUP_ID} ${GROUP_NAME}; \
        useradd --no-log-init --create-home --shell /bin/bash --uid ${USER_ID} --gid ${GROUP_ID} ${USER_NAME}; \
    fi && \
    usermod -a -G docker $USER_NAME && \
    usermod -a -G sudo $USER_NAME && \
    echo "$USER_NAME:$PASS" | chpasswd && \
    echo "root:$PASS" | chpasswd

WORKDIR /tmp

# update
# RUN apt update && \
#     apt upgrade

# install sudo
RUN apt-get update && apt-get -y install sudo

# install go
RUN wget https://golang.org/dl/go1.17.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && \
    tar -C /usr/local -xzf go1.17.linux-amd64.tar.gz && \
    echo "export PATH=\$PATH:/usr/local/go/bin" > /etc/profile.d/user-custom.sh && \
    /usr/local/go/bin/go get -v golang.org/x/tools/gopls && \
    echo "export PATH=\$PATH:/root/go/bin" > /etc/profile.d/go.sh

# install node
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
    apt install -y nodejs

# install docker
RUN apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release -y && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo \
    "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install docker-ce docker-ce-cli containerd.io -y

#instal docker-compose
RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

#install protoc plugins
RUN /usr/local/go/bin/go install github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway@latest && \
    /usr/local/go/bin/go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
    /usr/local/go/bin/go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
    # github.com/grpc-ecosystem/grpc-gateway/protoc-gen-openapiv2@latest \

#install go plugins
RUN /usr/local/go/bin/go install github.com/mdempsky/gocode@latest && \
    /usr/local/go/bin/go install github.com/uudashr/gopkgs/v2/cmd/gopkgs@latest && \
    /usr/local/go/bin/go install github.com/ramya-rao-a/go-outline@latest && \
    /usr/local/go/bin/go install github.com/acroca/go-symbols@latest && \
    /usr/local/go/bin/go install golang.org/x/tools/cmd/guru@latest && \
    /usr/local/go/bin/go install golang.org/x/tools/cmd/gorename@latest && \
    /usr/local/go/bin/go install github.com/cweill/gotests/gotests@latest && \
    /usr/local/go/bin/go install github.com/fatih/gomodifytags@latest && \
    /usr/local/go/bin/go install github.com/josharian/impl@latest && \
    /usr/local/go/bin/go install github.com/davidrjenni/reftools/cmd/fillstruct@latest && \
    /usr/local/go/bin/go install github.com/haya14busa/goplay/cmd/goplay@latest && \
    /usr/local/go/bin/go install github.com/godoctor/godoctor@latest && \
    /usr/local/go/bin/go install github.com/go-delve/delve/cmd/dlv@latest && \
    /usr/local/go/bin/go install github.com/go-delve/delve/cmd/dlv@master && \
    /usr/local/go/bin/go install github.com/stamblerre/gocode@latest && \
    /usr/local/go/bin/go install github.com/rogpeppe/godef@latest && \
    /usr/local/go/bin/go install golang.org/x/tools/cmd/goimports@latest && \
    /usr/local/go/bin/go install honnef.co/go/tools/cmd/staticcheck@latest && \
    /usr/local/go/bin/go install golang.org/x/tools/gopls@latest

WORKDIR $MNT_PATH

USER $USER_NAME

CMD ["sleep", "infinity"]
